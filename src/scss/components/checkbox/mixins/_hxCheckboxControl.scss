//
// ===== Mixins for <hx-checkbox-control> states =====
//

// ========== PRISTINE ==========
@mixin __checkboxControl($pseudo-state: null) {
  @if $pseudo-state == focus {
    box-shadow: $focus-glow;

    &::-ms-check {
      border-color: $cyan-700;
    }
  }
  @else if $pseudo-state == hover {
    color: $cyan-500;

    &::-ms-check {
      background-color: $cyan-50;
      color: $cyan-500;
    }
  }
  @else {
    color: $gray-500;

    &::-ms-check {
      background-color: $gray-0;
      border-color: currentColor;
      border-style: solid;
      border-width: 1px;
      color: inherit;
    }
  }
}

// ========== INVALID ==========
@mixin __checkboxControl--invalid($pseudo-state: null) {
  @if $pseudo-state == focus {
    box-shadow: $focus-glow-invalid;

    &::-ms-check {
      border-color: $red-900;
    }
  }
  @else if $pseudo-state == hover {
    &::-ms-check {
      background-color: $red-100;
    }
  }
  @else {
    color: $red-900;

    &::-ms-check {
      border-width: 2px;
      border-color: $red-900 !important;
      color: $red-900 !important;
    }
  }
}

// ========== DISABLED ==========
@mixin __checkboxControl--disabled($pseudo-state: null) {
  @if $pseudo-state == focus {
    &::-ms-check {
      border-color: $gray-500;
      box-shadow: $focus-glow-disabled;
    }
  }
  @else if $pseudo-state == hover {
    &::-ms-check {
      background-color: $gray-100;
      border-color: $gray-500;
      color: $gray-500;
    }
  }
  @else {
    color: $gray-500;
    cursor: not-allowed;

    &::-ms-check {
      background-color: $gray-100 !important; // simplest way of styling
      border-width: 1px;
    }
  }
}

@mixin hxCheckboxControl($state: null, $pseudo-state: null) {
  @if $state == invalid {
    @include __checkboxControl--invalid($pseudo-state);
  }
  @else if $state == disabled {
    @include __checkboxControl--disabled($pseudo-state);
  }
  @else {
    @include __checkboxControl($pseudo-state);
  }
}
