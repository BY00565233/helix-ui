@import (reference) 'components/radio/index';

.radio-spec {
  hx-radio-control {
    > label {
      > hx-radio {
        display: none;
      }
    }

    > input[type="radio"] {
      &.mock-focus {
        &:extend(hx-radio-control > input[type="radio"]:focus all);
      }

      &.mock-hover {
        &:extend(hx-radio-control > input[type="radio"]:hover all);

        ~ label > hx-radio {
          &:extend(hx-radio-control > input[type="radio"]:valid ~ label > hx-radio:hover all);
        }
      }

      &:disabled.mock-focus {
        &:extend(hx-radio-control > input[type="radio"]:disabled:focus all);
      }

      &:disabled.mock-hover {
        &:extend(hx-radio-control > input[type="radio"]:disabled:hover all);

        ~ label > hx-radio {
          &:extend(hx-radio-control > input[type="radio"]:disabled ~ label > hx-radio:hover all);
        }
      }
    }
  }

  // INVALID STATE
  hx-radio-set[hx-dirty] input[type="radio"]:enabled:invalid,
  hx-radio-set.hxInvalid input[type="radio"]:enabled {
    &.mock-focus {
      &:extend(hx-radio-set[hx-dirty] input[type="radio"]:enabled:invalid:focus all);
    }

    &.mock-hover {
      &:extend(hx-radio-set[hx-dirty] input[type="radio"]:enabled:invalid:hover all);

      ~ label > hx-radio {
        &:extend(hx-radio-set[hx-dirty] input[type="radio"]:enabled:invalid ~ label > hx-radio:hover all);
      }
    }
  }
}

@supports (--modern: true) {
  .radio-spec {
    hx-radio-control > label > hx-radio {
      display: inline-block;
    }
  }
}
